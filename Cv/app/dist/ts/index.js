/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ts/index.ts":
/*!*************************!*\
  !*** ./src/ts/index.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar slider_1 = __webpack_require__(/*! ./slider */ \"./src/ts/slider.ts\");\n\nvar SliderSkills = document.querySelector('.Main__slider');\nvar SliderProjects = document.querySelector('.Main__Projects');\nvar SliderSkillsConfig = {\n  timer: false,\n  arrows: true,\n  pagination: true,\n  loop: false\n};\nvar SliderProjectsConfig = {\n  timer: false,\n  arrows: true,\n  pagination: false,\n  loop: true\n};\nvar sliderCanvas = document.querySelectorAll('.Main__slider .canvas');\nvar slider = new slider_1.SliderV2(SliderSkills, SliderSkillsConfig);\nvar slider2 = new slider_1.SliderV2(SliderProjects, SliderProjectsConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztBQUFFRyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxRQUFRLEdBQUdDLG1CQUFPLENBQUMsb0NBQUQsQ0FBdEI7O0FBQ0EsSUFBSUMsWUFBWSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsZUFBdkIsQ0FBbkI7QUFDQSxJQUFJQyxjQUFjLEdBQUdGLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixpQkFBdkIsQ0FBckI7QUFDQSxJQUFJRSxrQkFBa0IsR0FBRztBQUFFQyxFQUFBQSxLQUFLLEVBQUUsS0FBVDtBQUFnQkMsRUFBQUEsTUFBTSxFQUFFLElBQXhCO0FBQThCQyxFQUFBQSxVQUFVLEVBQUUsSUFBMUM7QUFBZ0RDLEVBQUFBLElBQUksRUFBRTtBQUF0RCxDQUF6QjtBQUNBLElBQUlDLG9CQUFvQixHQUFHO0FBQUVKLEVBQUFBLEtBQUssRUFBRSxLQUFUO0FBQWdCQyxFQUFBQSxNQUFNLEVBQUUsSUFBeEI7QUFBOEJDLEVBQUFBLFVBQVUsRUFBRSxLQUExQztBQUFpREMsRUFBQUEsSUFBSSxFQUFFO0FBQXZELENBQTNCO0FBQ0EsSUFBSUUsWUFBWSxHQUFHVCxRQUFRLENBQUNVLGdCQUFULENBQTBCLHVCQUExQixDQUFuQjtBQUNBLElBQUlDLE1BQU0sR0FBRyxJQUFJZCxRQUFRLENBQUNlLFFBQWIsQ0FBc0JiLFlBQXRCLEVBQW9DSSxrQkFBcEMsQ0FBYjtBQUNBLElBQUlVLE9BQU8sR0FBRyxJQUFJaEIsUUFBUSxDQUFDZSxRQUFiLENBQXNCVixjQUF0QixFQUFzQ00sb0JBQXRDLENBQWQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hcHAvLi9zcmMvdHMvaW5kZXgudHM/YTQ3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG52YXIgc2xpZGVyXzEgPSByZXF1aXJlKFwiLi9zbGlkZXJcIik7XHJcbnZhciBTbGlkZXJTa2lsbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuTWFpbl9fc2xpZGVyJyk7XHJcbnZhciBTbGlkZXJQcm9qZWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5NYWluX19Qcm9qZWN0cycpO1xyXG52YXIgU2xpZGVyU2tpbGxzQ29uZmlnID0geyB0aW1lcjogZmFsc2UsIGFycm93czogdHJ1ZSwgcGFnaW5hdGlvbjogdHJ1ZSwgbG9vcDogZmFsc2UgfTtcclxudmFyIFNsaWRlclByb2plY3RzQ29uZmlnID0geyB0aW1lcjogZmFsc2UsIGFycm93czogdHJ1ZSwgcGFnaW5hdGlvbjogZmFsc2UsIGxvb3A6IHRydWUgfTtcclxudmFyIHNsaWRlckNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5NYWluX19zbGlkZXIgLmNhbnZhcycpO1xyXG52YXIgc2xpZGVyID0gbmV3IHNsaWRlcl8xLlNsaWRlclYyKFNsaWRlclNraWxscywgU2xpZGVyU2tpbGxzQ29uZmlnKTtcclxudmFyIHNsaWRlcjIgPSBuZXcgc2xpZGVyXzEuU2xpZGVyVjIoU2xpZGVyUHJvamVjdHMsIFNsaWRlclByb2plY3RzQ29uZmlnKTtcclxuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwic2xpZGVyXzEiLCJyZXF1aXJlIiwiU2xpZGVyU2tpbGxzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiU2xpZGVyUHJvamVjdHMiLCJTbGlkZXJTa2lsbHNDb25maWciLCJ0aW1lciIsImFycm93cyIsInBhZ2luYXRpb24iLCJsb29wIiwiU2xpZGVyUHJvamVjdHNDb25maWciLCJzbGlkZXJDYW52YXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwic2xpZGVyIiwiU2xpZGVyVjIiLCJzbGlkZXIyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ts/index.ts\n");

/***/ }),

/***/ "./src/ts/slider.ts":
/*!**************************!*\
  !*** ./src/ts/slider.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SliderV2 = void 0;\n\nvar SliderV2 =\n/** @class */\nfunction () {\n  /*\r\n  * @params {HTMLElement} section cotain slider\r\n  * @params {Object} SliderConfig\r\n  * @params {Object} SliderConfig.timer enable slider animation\r\n  * @params {Object} SliderConfig.arrows enable arrow\r\n  * @params {Object} SliderConfig.pagination enable pagination button\r\n  * @params {Object} SliderConfig.loop enable return to start\r\n  *\r\n  */\n  function SliderV2(sliderElement, SliderConfig) {\n    this.test = 'test'; //peux uniquement etre lue(equivalent des const pour des class)\n\n    this.sliderElement = sliderElement;\n    this.sliderContainers = [].slice.call(document.querySelectorAll(\".\".concat(this.sliderElement.className, \" >div\")));\n    this.SliderConfig = SliderConfig;\n    this.slideActive = 0;\n    this.buttonArrow = [];\n\n    if (this.SliderConfig.pagination) {\n      this.createPagination();\n      this.buttonArrow[0].classList.add('button--Active');\n    }\n\n    if (this.SliderConfig.arrows) {\n      this.createarrows();\n    }\n\n    for (var j = 0; j < this.sliderContainers.length; j++) {\n      this.slideElement = this.sliderContainers[j];\n      this.slideElement.style.position = 'absolute';\n\n      if (j === this.sliderContainers.length - 1) {\n        this.slideElement.classList.add('Container--after');\n      } else if (j !== 0) {\n        this.slideElement.classList.add('Container--Before');\n      }\n    }\n  }\n\n  SliderV2.prototype.createarrows = function () {\n    var _this = this;\n\n    this.arrowLeft = document.createElement('div');\n    this.arrowLeft.classList.add('SliderLeft');\n    this.arrowLeft.classList.add('sliderdesable');\n    this.sliderElement.insertAdjacentElement('afterbegin', this.arrowLeft);\n    this.arrowRight = document.createElement('div');\n    this.arrowRight.classList.add('SliderRight');\n    this.sliderElement.insertAdjacentElement('beforeend', this.arrowRight);\n    this.arrowLeft.addEventListener('click', function (e) {\n      if (_this.SliderConfig.loop) {\n        _this.prev();\n\n        _this.arrowLeft.classList.remove('sliderdesable');\n      } else {\n        if (_this.slideActive > 0) {\n          _this.prev();\n\n          if (_this.slideActive === 0) {\n            _this.arrowLeft.classList.add('sliderdesable');\n          } else {\n            _this.arrowLeft.classList.remove('sliderdesable');\n          }\n        } else {\n          _this.arrowLeft.classList.add('sliderdesable');\n        }\n      }\n\n      console.log('goleft');\n    });\n    this.arrowRight.addEventListener('click', function (e) {\n      if (_this.SliderConfig.loop) {\n        _this.next();\n\n        _this.arrowLeft.classList.remove('sliderdesable');\n      } else {\n        if (_this.slideActive <= _this.sliderContainers.length - 2) {\n          _this.next();\n\n          if (_this.slideActive === _this.sliderContainers.length - 1) {\n            _this.arrowRight.classList.add('sliderdesable');\n          } else {\n            _this.arrowLeft.classList.remove('sliderdesable');\n          }\n        }\n      }\n\n      console.log('go right');\n    });\n  };\n\n  SliderV2.prototype.createPagination = function () {\n    var _this = this;\n\n    this.buttonContainer = document.createElement('div');\n    this.buttonContainer.classList.add('slider__Buttons');\n    this.sliderElement.insertAdjacentElement('beforeend', this.buttonContainer);\n\n    var _loop_1 = function _loop_1(i) {\n      this_1.button = document.createElement('div');\n      this_1.buttonContainer.insertAdjacentElement('beforeend', this_1.button);\n      this_1.buttonArrow.push(this_1.button);\n      this_1.button.addEventListener('click', function (e) {\n        _this.gotoPagin(i);\n      });\n    };\n\n    var this_1 = this;\n\n    for (var i = 0; i < this.sliderContainers.length; i++) {\n      _loop_1(i);\n    }\n  };\n\n  SliderV2.prototype.next = function () {\n    this[\"goto\"](this.slideActive + 1);\n  };\n\n  SliderV2.prototype.prev = function () {\n    this[\"goto\"](this.slideActive - 1);\n  };\n\n  SliderV2.prototype[\"goto\"] = function (index) {\n    index = this.verifIndex(index);\n    console.log(index, this.slideActive);\n\n    if (this.slideActive === this.sliderContainers.length - 1 && index === 0) {\n      console.log('upReset'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--after');\n\n      for (var k = 1; k < this.sliderContainers.length - 1; k++) {\n        //@ts-ignore\n        this.sliderContainers[k].classList.remove('Container--after'); //@ts-ignore\n\n        this.sliderContainers[k].classList.add('Container--Before');\n      }\n    } else if (this.slideActive === this.sliderContainers.length - 2 && index > this.slideActive) {\n      console.log('upBeforeReset'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--after'); //@ts-ignore\n\n      this.sliderContainers[0].classList.add('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[0].classList.remove('Container--after');\n    } else if (index === 1 && index > this.slideActive) {\n      console.log('upAfterReset'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.sliderContainers.length - 1].classList.add('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[this.sliderContainers.length - 1].classList.remove('Container--after');\n    } else if (this.slideActive === 0 && index === this.sliderContainers.length - 1) {\n      console.log('downReset'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--Before');\n\n      for (var k = 1; k < this.sliderContainers.length - 1; k++) {\n        //@ts-ignore\n        this.sliderContainers[k].classList.remove('Container--Before'); //@ts-ignore\n\n        this.sliderContainers[k].classList.add('Container--after');\n      }\n    } else if (this.slideActive === 1 && index < this.slideActive) {\n      console.log('downBeforReset'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[this.sliderContainers.length - 1].classList.add('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.sliderContainers.length - 1].classList.remove('Container--Before');\n    } else if (this.slideActive === this.sliderContainers.length - 2 && index < this.slideActive) {\n      console.log('downAfterReset'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[0].classList.add('Container--after'); //@ts-ignore\n\n      this.sliderContainers[0].classList.remove('Container--Before');\n    } else if (this.slideActive < index) {\n      console.log('up'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--after');\n    } else if (this.slideActive > index) {\n      console.log('down'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--Before');\n    }\n\n    if (this.SliderConfig.pagination) {\n      this.buttonArrow[this.slideActive].classList.remove('button--Active');\n      this.buttonArrow[index].classList.add('button--Active');\n    }\n\n    this.slideActive = index;\n  };\n\n  SliderV2.prototype.verifIndex = function (index) {\n    if (index > this.sliderContainers.length - 1) {\n      index = 0;\n    }\n\n    if (index < 0) {\n      index = this.sliderContainers.length - 1;\n    }\n\n    return index;\n  };\n\n  SliderV2.prototype.gotoPagin = function (index) {\n    if (index === this.sliderContainers.length - 1) {\n      console.log('upReset'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--after');\n\n      for (var k = 1; k < this.sliderContainers.length - 1; k++) {\n        //@ts-ignore\n        this.sliderContainers[k].classList.remove('Container--after'); //@ts-ignore\n\n        this.sliderContainers[k].classList.add('Container--Before');\n      } //@ts-ignore\n\n\n      this.sliderContainers[0].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[0].classList.add('Container--Before');\n    } else if (index === 0) {\n      //@ts-ignore\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--Before');\n\n      for (var k = 1; k < this.sliderContainers.length - 1; k++) {\n        //@ts-ignore\n        this.sliderContainers[k].classList.add('Container--Before'); //@ts-ignore\n\n        this.sliderContainers[k].classList.remove('Container--after');\n      } //@ts-ignore\n\n\n      this.sliderContainers[this.sliderContainers.length - 1].classList.add('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[this.sliderContainers.length - 1].classList.remove('Container--after');\n    } else if (index > this.slideActive) {\n      //@ts-ignore\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--after');\n\n      for (var l = this.slideActive; l > this.sliderContainers.length; l++) {\n        //@ts-ignore\n        this.sliderContainers[l].classList.add('Container--Before'); //@ts-ignore\n\n        this.sliderContainers[l].classList.remove('Container--after');\n      }\n    } else if (index < this.slideActive) {\n      //@ts-ignore\n      this.sliderContainers[index].classList.remove('Container--Before'); //@ts-ignore\n\n      this.sliderContainers[index].classList.remove('Container--after'); //@ts-ignore\n\n      this.sliderContainers[this.slideActive].classList.add('Container--Before');\n\n      for (var l = index + 1; l < this.slideActive; l++) {\n        //@ts-ignore\n        this.sliderContainers[l].classList.remove('Container--after'); //@ts-ignore\n\n        this.sliderContainers[l].classList.add('Container--Before');\n      }\n    }\n\n    if (this.SliderConfig.pagination) {\n      this.buttonArrow[this.slideActive].classList.remove('button--Active');\n      this.buttonArrow[index].classList.add('button--Active');\n    }\n\n    this.slideActive = index;\n  };\n\n  return SliderV2;\n}();\n\nexports.SliderV2 = SliderV2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ts/slider.ts\n");

/***/ }),

/***/ "./src/sass/index.scss":
/*!*****************************!*\
  !*** ./src/sass/index.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2Fzcy9pbmRleC5zY3NzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FwcC8uL3NyYy9zYXNzL2luZGV4LnNjc3M/ZTNiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/sass/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/ts/index": 0,
/******/ 			"css/index": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkapp"] = self["webpackChunkapp"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/index"], () => (__webpack_require__("./src/ts/index.ts")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/index"], () => (__webpack_require__("./src/sass/index.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;